// Importar a próxima cena
import { cena2 } from "./cena2.js";

// Criar a cena 1
var cena1 = new Phaser.Scene("Cena 1");

var player;
var player2;
var platforms;
var cursors;
//var score = 0;

//var gam = new Phaser.Game(config);
var A;
var W;
var S;
var D;

cena1.preload = function () {
  this.load.spritesheet("bruxa", "assets/bruxa.png", {
    frameWidth: 32,
    frameHeight: 48,
  });
  this.load.spritesheet("branca", "assets/brancadeneve.png", {
    frameWidth: 32,
    frameHeight: 48,
  });
};

function create() {
  // Trilha sonora
  trilha = this.sound.add("trilha");
  trilha.play();

  // Jogador 1 - controles/animação
  player = this.physics.add.sprite(100, 450, "bruxa");
  player.setCollideWorldBounds(true);
  //  Animação do player1
  this.anims.create({
    key: "down",
    frames: this.anims.generateFrameNumbers("bruxa", { start: 0, end: 3 }),
    frameRate: 10,
    repeat: -1,
  });
  this.anims.create({
    key: "left",
    frames: this.anims.generateFrameNumbers("bruxa", { start: 4, end: 7 }),
    frameRate: 10,
    repeat: -1,
  });
  this.anims.create({
    key: "turn",
    frames: [{ key: "bruxa", frame: 0 }],
    frameRate: 20,
  });
  this.anims.create({
    key: "right",
    frames: this.anims.generateFrameNumbers("bruxa", {
      start: 8,
      end: 11,
    }),
    frameRate: 10,
    repeat: -1,
  });
  this.anims.create({
    key: "up",
    frames: this.anims.generateFrameNumbers("bruxa", {
      start: 12,
      end: 15,
    }),
    frameRate: 10,
    repeat: -1,
  });

  // Jogador 2 - controles/animação
  player2 = this.physics.add.sprite(150, 400, "branca");
  player2.setCollideWorldBounds(true);

  this.anims.create({
    key: "s",
    frames: this.anims.generateFrameNumbers("branca", {
      start: 0,
      end: 3,
    }),
    frameRate: 10,
    repeat: -1,
  });
  this.anims.create({
    key: "a",
    frames: this.anims.generateFrameNumbers("branca", {
      start: 4,
      end: 7,
    }),
    frameRate: 10,
    repeat: -1,
  });
  this.anims.create({
    key: "turn2",
    frames: [{ key: "branca", frame: 0 }],
    frameRate: 20,
  });
  this.anims.create({
    key: "d",
    frames: this.anims.generateFrameNumbers("branca", {
      start: 8,
      end: 11,
    }),
    frameRate: 10,
    repeat: -1,
  });
  this.anims.create({
    key: "w",
    frames: this.anims.generateFrameNumbers("branca", {
      start: 12,
      end: 15,
    }),
    frameRate: 10,
    repeat: -1,
  });

  //  Input Events
  cursors = this.input.keyboard.createCursorKeys();

  //  Collide the player and the stars with the platforms
  this.physics.add.collider(player, platforms);
  this.physics.add.collider(player2, platforms);
  this.physics.add.overlap(player, player2);

  //  Checks to see if the player overlaps with any of the stars, if he does call the collectStar function
  this.physics.add.overlap(player, stars, collectStar, null, this);

  this.physics.add.collider(player, bombs, hitBomb, null, this);

  w = this.input.keyboard.addKey("W");
  s = this.input.keyboard.addKey("S");
  a = this.input.keyboard.addKey("A");
  d = this.input.keyboard.addKey("D");
  //teclaf = this.input.keyboard.addKey("F");
}

function update() {
  if (cursors.left.isDown) {
    player.setVelocityX(-100);
    player.anims.play("left", true);
  } else if (cursors.right.isDown) {
    player.setVelocityX(100);
    player.anims.play("right", true);
  } else if (cursors.up.isDown) {
    player.setVelocityY(-100);
    player.anims.play("up", true);
  } else if (cursors.down.isDown) {
    player.setVelocityY(100);
    player.anims.play("down", true);
  } else {
    player.setVelocityX(0);
    player.setVelocityY(0);
    player.anims.play("turn");
  }

  if (a.isDown) {
    player2.setVelocityX(-100);
    player2.anims.play("a", true);
  } else if (d.isDown) {
    player2.setVelocityX(100);
    player2.anims.play("d", true);
  } else if (w.isDown) {
    player2.setVelocityY(-100);
    player2.anims.play("w", true);
  } else if (s.isDown) {
    player2.setVelocityY(100);
    player2.anims.play("s", true);
  } else {
    player2.setVelocityX(0);
    player2.setVelocityY(0);
    player2.anims.play("turn2");
  }
}
